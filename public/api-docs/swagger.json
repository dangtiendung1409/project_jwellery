{
  "swagger": "2.0",
  "info": {
    "description": "\n\nHeader -> api_key :  \n\n",
    "version": "1.0.0",
    "title": "Swagger App"
  },
  "host": "127.0.0.1:8001",
  "basePath": "/api",
  "tags": [
    {
      "name": "User",
      "description": "All User Operations"
    },
    {
      "name": "Category",
      "description": "Category API"
    }
  ],
  "paths": {
   "/login": {
  "post": {
    "tags": [
      "Auth"
    ],
    "summary": "Login and get JWT tokens",
    "operationId": "loginUser",
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "in": "body",
        "name": "body",
        "required": true,
        "schema": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "user@example.com"
            },
            "password": {
              "type": "string",
              "example": "secret"
            }
          }
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Login successful",
        "schema": {
          "type": "object",
          "properties": {
            "message": { "type": "string", "example": "Login successful" },
            "token": { "type": "string" },
            "refresh_token": { "type": "string" },
            "route": { "type": "string", "example": "http://yourapp.test/" }
          }
        }
      },
      "401": {
        "description": "Wrong account or password",
        "schema": {
          "type": "object",
          "properties": {
            "error": { "type": "string", "example": "Wrong account or password." }
          }
        }
      },
      "403": {
        "description": "Account is locked",
        "schema": {
          "type": "object",
          "properties": {
            "error": { "type": "string", "example": "Your account is locked." }
          }
        }
      }
    }
  }
},
"/register": {
  "post": {
    "tags": [
      "Auth"
    ],
    "summary": "Register a new user account",
    "operationId": "registerUser",
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "in": "body",
        "name": "body",
        "required": true,
        "schema": {
          "type": "object",
          "required": ["full_name", "email", "password", "password_confirmation"],
          "properties": {
            "full_name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "john@example.com"
            },
            "password": {
              "type": "string",
              "example": "123456"
            },
            "password_confirmation": {
              "type": "string",
              "example": "123456"
            }
          }
        }
      }
    ],
    "responses": {
      "201": {
        "description": "Registration successful",
        "schema": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Registration successful"
            }
          }
        }
      },
      "422": {
        "description": "Validation error",
        "schema": {
          "type": "object",
          "properties": {
            "message": { "type": "string", "example": "The given data was invalid." },
            "errors": {
              "type": "object",
              "example": {
                "email": ["The email has already been taken."]
              }
            }
          }
        }
      }
    }
  }
},
"/logout": {
          "post": {
              "tags": [
                  "Auth"
              ],
              "summary": "User Logout",
              "operationId": "logoutUser",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                      "name": "Authorization",
                      "in": "header",
                      "description": "Bearer token for authentication",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Logout successful"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "500": {
                      "description": "Internal server error"
                  }
              }
          }
      },


    "/getCategories": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get All Categories (with subcategories)",
        "operationId": "getCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Category data retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products-by-category/{slug}": {

  "get": {
    "tags": [
      "Category"
    ],
    "summary": "Get products by category slug (including subcategories)",
    "operationId": "getProductsByCategorySlug",
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "name": "slug",
        "in": "path",
        "description": "Category slug",
        "required": true,
        "type": "string"
      }
    ],
    "responses": {
      "200": {
        "description": "List of products",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      },
      "404": {
        "description": "Category not found"
      }
    }
  }
  },
  "/product-detail/{slug}": {
  "get": {
    "tags": [
      "Product"
    ],
    "summary": "Get Product Detail by Slug",
    "operationId": "getProductDetail",
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "name": "slug",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "Slug of the product to retrieve"
      }
    ],
    "responses": {
      "200": {
        "description": "Product detail retrieved successfully",
        "schema": {
          "$ref": "#/definitions/Product"
        }
      },
      "404": {
        "description": "Product not found"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},
"/related-products/{slug}": {
  "get": {
    "tags": [
      "Product"
    ],
    "summary": "Get up to 4 related products by product slug (same category)",
    "operationId": "getRelatedProductsBySlug",
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "name": "slug",
        "in": "path",
        "description": "Product slug to find related products",
        "required": true,
        "type": "string"
      }
    ],
    "responses": {
      "200": {
        "description": "List of related products",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      },
      "404": {
        "description": "Product not found"
      }
    }
  }
},
"/search-products": {
  "get": {
    "tags": [
      "Product"
    ],
    "summary": "Search products by keyword (matches name, code, and other fields)",
    "operationId": "searchProducts",
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "name": "keyword",
        "in": "query",
        "description": "Keyword to search across product_name, product_code, type, stone_type, color, material, gender, finish_quality",
        "required": true,
        "type": "string"
      }
    ],
    "responses": {
      "200": {
        "description": "List of matched products",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    }
  }
}






  },
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "api-key"
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "category_name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "parent_category_id": {
          "type": "integer",
          "nullable": true
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryChild"
          }
        }
      }
    },
    "CategoryChild": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "category_name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "parent_category_id": {
          "type": "integer",
          "nullable": true
        }
      }
    },
   "Product": {
  "type": "object",
  "properties": {
    "id": { "type": "integer" },
    "product_name": { "type": "string" },
    "slug": { "type": "string" },
    "price": { "type": "number", "format": "float" },
    "description": { "type": "string" },
    "product_code": { "type": "string" },
    "qty": { "type": "integer" },
    "category_id": { "type": "integer" },
    "type": { "type": "string" },
    "stone_type": { "type": "string" },
    "color": { "type": "string" },
    "material": { "type": "string" },
    "gender": { "type": "string" },
    "finish_quality": { "type": "string" },
    "images": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ProductImage"
      }
    },
    "category": {
      "$ref": "#/definitions/Category"
    }
  }
},
"ProductImage": {
  "type": "object",
  "properties": {
    "id": { "type": "integer" },
    "product_id": { "type": "integer" },
    "image_path": { "type": "string" }
  }
}


  },
  "schemes": [
    "http",
    "https"
  ]
}
